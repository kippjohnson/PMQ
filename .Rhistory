k3_adj <- (grades$Lab3[grades$T.A. == "KIPP"]) + (median3 -  median(grades$Lab3[grades$T.A. == "KIPP"]) )
n3_adj <- (grades$Lab3[grades$T.A. == "NIKITHA"]) + (median3 -  median(grades$Lab3[grades$T.A. == "NIKITHA"]) )
r3_adj <- (grades$Lab3[grades$T.A. == "RAYMOND"]) + (median3 -  median(grades$Lab3[grades$T.A. == "RAYMOND"],na.rm=TRUE) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k3_adj,at=1,add=TRUE)
boxplot(n3_adj,add=TRUE,at=2)
boxplot(r3_adj,add=TRUE,at=3)
par(mfrow=c(1,2))
boxplot(grades$Lab4~grades$T.A.)
median4 <- median(grades$Lab4,na.rm=TRUE)
k4_adj <- (grades$Lab4[grades$T.A. == "KIPP"]) + (median4 -  median(grades$Lab4[grades$T.A. == "KIPP"]) )
n4_adj <- (grades$Lab4[grades$T.A. == "NIKITHA"]) + (median4 -  median(grades$Lab4[grades$T.A. == "NIKITHA"]) )
r4_adj <- (grades$Lab4[grades$T.A. == "RAYMOND"]) + (median4 -  median(grades$Lab4[grades$T.A. == "RAYMOND"],na.rm=TRUE) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k4_adj,at=1,add=TRUE)
boxplot(n4_adj,add=TRUE,at=2)
boxplot(r4_adj,add=TRUE,at=3)
par(mfrow=c(1,2))
boxplot(grades$Lab5~grades$T.A.)
median5 <- median(grades$Lab5,na.rm=TRUE)
k5_adj <- (grades$Lab5[grades$T.A. == "KIPP"]) + (median5 -  median(grades$Lab5[grades$T.A. == "KIPP"]) )
n5_adj <- (grades$Lab5[grades$T.A. == "NIKITHA"]) + (median5 -  median(grades$Lab5[grades$T.A. == "NIKITHA"]) )
r5_adj <- (grades$Lab5[grades$T.A. == "RAYMOND"]) + (median5 -  median(grades$Lab5[grades$T.A. == "RAYMOND"],na.rm=TRUE) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k5_adj,at=1,add=TRUE)
boxplot(n5_adj,add=TRUE,at=2)
boxplot(r5_adj,add=TRUE,at=3)
par(mfrow=c(1,2))
boxplot(grades$Lab1~grades$T.A.)
median1 <- median(grades$Lab1)
k1_adj <-   (grades$Lab1[grades$T.A. == "KIPP"]) + (median1 -  median(grades$Lab1[grades$T.A. == "KIPP"]) )
n1_adj <- (grades$Lab1[grades$T.A. == "NIKITHA"]) + (median1 -  median(grades$Lab1[grades$T.A. == "NIKITHA"]) )
r1_adj <- (grades$Lab1[grades$T.A. == "RAYMOND"]) + (median1 -  median(grades$Lab1[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k1_adj,add=TRUE,at=1)
boxplot(n1_adj,add=TRUE,at=2)
boxplot(r1_adj,add=TRUE,at=3)
median1
median(grades$Lab1[grades$T.A. == "KIPP"])
median(grades$Lab1[grades$T.A. == "NIKITHA"])
par(mfrow=c(1,2))
boxplot(grades$Lab1~grades$T.A.)
median1 <- median(grades$Lab1)
k1_adj <-   (grades$Lab1[grades$T.A. == "KIPP"]) + (median1 -  median(grades$Lab1[grades$T.A. == "KIPP"]) ) + 6
n1_adj <- (grades$Lab1[grades$T.A. == "NIKITHA"]) + (median1 -  median(grades$Lab1[grades$T.A. == "NIKITHA"]) )
r1_adj <- (grades$Lab1[grades$T.A. == "RAYMOND"]) + (median1 -  median(grades$Lab1[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k1_adj,add=TRUE,at=1)
boxplot(n1_adj,add=TRUE,at=2)
boxplot(r1_adj,add=TRUE,at=3)
par(mfrow=c(1,2))
boxplot(grades$Lab1~grades$T.A.)
median1 <- median(grades$Lab1)
k1_adj <-   (grades$Lab1[grades$T.A. == "KIPP"]) + (median1 -  median(grades$Lab1[grades$T.A. == "KIPP"]) )
n1_adj <- (grades$Lab1[grades$T.A. == "NIKITHA"]) + (median1 -  median(grades$Lab1[grades$T.A. == "NIKITHA"]) )
r1_adj <- (grades$Lab1[grades$T.A. == "RAYMOND"]) + (median1 -  median(grades$Lab1[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k1_adj,add=TRUE,at=1)
boxplot(n1_adj,add=TRUE,at=2)
boxplot(r1_adj,add=TRUE,at=3)
par(mfrow=c(1,2))
boxplot(grades$Lab1~grades$T.A.)
median1 <- median(grades$Lab1)
k1_adj <-   (grades$Lab1[grades$T.A. == "KIPP"]) + .06 + (median1 -  median(grades$Lab1[grades$T.A. == "KIPP"]) )
n1_adj <- (grades$Lab1[grades$T.A. == "NIKITHA"]) + (median1 -  median(grades$Lab1[grades$T.A. == "NIKITHA"]) )
r1_adj <- (grades$Lab1[grades$T.A. == "RAYMOND"]) + (median1 -  median(grades$Lab1[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k1_adj,add=TRUE,at=1)
boxplot(n1_adj,add=TRUE,at=2)
boxplot(r1_adj,add=TRUE,at=3)
rm(list=ls())
grades = read.csv("/Users/kwj/Desktop/Lab_gradesCopy.csv",header=TRUE)
View(grades)
grades$T.A. = as.factor(grades$T.A.)
anova(lm(grades$Lab1~grades$T.A.)) # Fairly different
par(mfrow=c(1,2))
boxplot(grades$Lab1~grades$T.A.)
median1 <- median(grades$Lab1)
k1_adj <-   (grades$Lab1[grades$T.A. == "KIPP"]) + .06 + (median1 -  median(grades$Lab1[grades$T.A. == "KIPP"]) )
n1_adj <- (grades$Lab1[grades$T.A. == "NIKITHA"]) + (median1 -  median(grades$Lab1[grades$T.A. == "NIKITHA"]) )
r1_adj <- (grades$Lab1[grades$T.A. == "RAYMOND"]) + (median1 -  median(grades$Lab1[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k1_adj,add=TRUE,at=1)
boxplot(n1_adj,add=TRUE,at=2)
boxplot(r1_adj,add=TRUE,at=3)
rm(list=ls())
grades = read.csv("/Users/kwj/Desktop/Lab_gradesCopy.csv",header=TRUE)
View(grades)
grades$T.A. = as.factor(grades$T.A.)
anova(lm(grades$Lab1~grades$T.A.)) # Fairly different
anova(lm(grades$Lab2~grades$T.A.)) # Almost exactly the same
rm(list=ls())
grades = read.csv("/Users/kwj/Desktop/Lab_gradesCopy.csv",header=TRUE)
View(grades)
grades$T.A. = as.factor(grades$T.A.)
anova(lm(grades$Lab1~grades$T.A.)) # Fairly different
anova(lm(grades$Lab2~grades$T.A.)) # Almost exactly the same
anova(lm(grades$Lab3~grades$T.A.)) # Different only because of outliers
anova(lm(grades$Lab4~grades$T.A.))
anova(lm(grades$Lab5~grades$T.A.))
# I think it would be a good idea to do normaliation within
# each lab by median, as below:
# The top plot contains the raw score boxplots, the second group of three boxplots are the normalized scores
##### Lab 1
par(mfrow=c(1,2))
boxplot(grades$Lab1~grades$T.A.)
median1 <- median(grades$Lab1)
k1_adj <-   (grades$Lab1[grades$T.A. == "KIPP"]) + .06 + (median1 -  median(grades$Lab1[grades$T.A. == "KIPP"]) )
n1_adj <- (grades$Lab1[grades$T.A. == "NIKITHA"]) + (median1 -  median(grades$Lab1[grades$T.A. == "NIKITHA"]) )
r1_adj <- (grades$Lab1[grades$T.A. == "RAYMOND"]) + (median1 -  median(grades$Lab1[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k1_adj,add=TRUE,at=1)
boxplot(n1_adj,add=TRUE,at=2)
boxplot(r1_adj,add=TRUE,at=3)
anova(lm(grades$Lab1~grades$T.A.)) # Fairly different
rm(list=ls())
grades = read.csv("/Users/kwj/Desktop/Lab_grades.csv",header=TRUE)
View(grades)
grades$T.A. = as.factor(grades$T.A.)
anova(lm(grades$Lab1~grades$T.A.)) # Fairly different
anova(lm(grades$Lab2~grades$T.A.)) # Almost exactly the same
anova(lm(grades$Lab3~grades$T.A.)) # Different only because of outliers
anova(lm(grades$Lab4~grades$T.A.))
anova(lm(grades$Lab5~grades$T.A.))
# I think it would be a good idea to do normaliation within
# each lab by median, as below:
# The top plot contains the raw score boxplots, the second group of three boxplots are the normalized scores
##### Lab 1
par(mfrow=c(1,2))
boxplot(grades$Lab1~grades$T.A.)
median1 <- median(grades$Lab1)
k1_adj <-   (grades$Lab1[grades$T.A. == "KIPP"]) + .06 + (median1 -  median(grades$Lab1[grades$T.A. == "KIPP"]) )
n1_adj <- (grades$Lab1[grades$T.A. == "NIKITHA"]) + (median1 -  median(grades$Lab1[grades$T.A. == "NIKITHA"]) )
r1_adj <- (grades$Lab1[grades$T.A. == "RAYMOND"]) + (median1 -  median(grades$Lab1[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k1_adj,add=TRUE,at=1)
boxplot(n1_adj,add=TRUE,at=2)
boxplot(r1_adj,add=TRUE,at=3)
grades = read.csv("/Users/kwj/Desktop/Lab_gradesCopy.csv",header=TRUE)
rm(list=ls())
grades = read.csv("/Users/kwj/Desktop/Lab_gradesCopy.csv",header=TRUE)
View(grades)
grades$T.A. = as.factor(grades$T.A.)
anova(lm(grades$Lab1~grades$T.A.)) # Fairly different
anova(lm(grades$Lab2~grades$T.A.)) # Almost exactly the same
anova(lm(grades$Lab3~grades$T.A.)) # Different only because of outliers
anova(lm(grades$Lab4~grades$T.A.))
anova(lm(grades$Lab5~grades$T.A.))
# I think it would be a good idea to do normaliation within
# each lab by median, as below:
# The top plot contains the raw score boxplots, the second group of three boxplots are the normalized scores
##### Lab 1
par(mfrow=c(1,2))
boxplot(grades$Lab1~grades$T.A.)
median1 <- median(grades$Lab1)
k1_adj <-   (grades$Lab1[grades$T.A. == "KIPP"]) + .06 + (median1 -  median(grades$Lab1[grades$T.A. == "KIPP"]) )
n1_adj <- (grades$Lab1[grades$T.A. == "NIKITHA"]) + (median1 -  median(grades$Lab1[grades$T.A. == "NIKITHA"]) )
r1_adj <- (grades$Lab1[grades$T.A. == "RAYMOND"]) + (median1 -  median(grades$Lab1[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k1_adj,add=TRUE,at=1)
boxplot(n1_adj,add=TRUE,at=2)
boxplot(r1_adj,add=TRUE,at=3)
par(mfrow=c(1,2))
boxplot(grades$Lab5~grades$T.A.)
median5 <- median(grades$Lab5,na.rm=TRUE)
k5_adj <- (grades$Lab5[grades$T.A. == "KIPP"]) + (median5 -  median(grades$Lab5[grades$T.A. == "KIPP"]) )
n5_adj <- (grades$Lab5[grades$T.A. == "NIKITHA"]) + (median5 -  median(grades$Lab5[grades$T.A. == "NIKITHA"]) )
r5_adj <- (grades$Lab5[grades$T.A. == "RAYMOND"]) + (median5 -  median(grades$Lab5[grades$T.A. == "RAYMOND"],na.rm=TRUE) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k5_adj,at=1,add=TRUE)
boxplot(n5_adj,add=TRUE,at=2)
boxplot(r5_adj,add=TRUE,at=3)
rm(list=ls())
grades = read.csv("/Users/kwj/Desktop/Lab_gradesCopy.csv",header=TRUE)
View(grades)
grades$T.A. = as.factor(grades$T.A.)
anova(lm(grades$Lab1~grades$T.A.)) # Fairly different
anova(lm(grades$Lab2~grades$T.A.)) # Almost exactly the same
anova(lm(grades$Lab3~grades$T.A.)) # Different only because of outliers
anova(lm(grades$Lab4~grades$T.A.))
anova(lm(grades$Lab5~grades$T.A.))
# I think it would be a good idea to do normaliation within
# each lab by median, as below:
# The top plot contains the raw score boxplots, the second group of three boxplots are the normalized scores
##### Lab 1
par(mfrow=c(1,2))
boxplot(grades$Lab1~grades$T.A.)
median1 <- median(grades$Lab1)
k1_adj <-   (grades$Lab1[grades$T.A. == "KIPP"]) + .06 + (median1 -  median(grades$Lab1[grades$T.A. == "KIPP"]) )
n1_adj <- (grades$Lab1[grades$T.A. == "NIKITHA"]) + (median1 -  median(grades$Lab1[grades$T.A. == "NIKITHA"]) )
r1_adj <- (grades$Lab1[grades$T.A. == "RAYMOND"]) + (median1 -  median(grades$Lab1[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k1_adj,add=TRUE,at=1)
boxplot(n1_adj,add=TRUE,at=2)
boxplot(r1_adj,add=TRUE,at=3)
##### Lab 2
### Almost identical
par(mfrow=c(1,2))
boxplot(grades$Lab2~grades$T.A.)
median2 <- median(grades$Lab2)
k2_adj <- (grades$Lab2[grades$T.A. == "KIPP"]) + (median2 -  median(grades$Lab2[grades$T.A. == "KIPP"]) )
n2_adj <- (grades$Lab2[grades$T.A. == "NIKITHA"]) + (median2 -  median(grades$Lab2[grades$T.A. == "NIKITHA"]) )
r2_adj <- (grades$Lab2[grades$T.A. == "RAYMOND"]) + (median2 -  median(grades$Lab2[grades$T.A. == "RAYMOND"]) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k2_adj,add=TRUE,at=1)
boxplot(n2_adj,add=TRUE,at=2)
boxplot(r2_adj,add=TRUE,at=3)
##### Lab 3
### The only reason they are significantly different is because
### I had two low-end outliers
par(mfrow=c(1,2))
boxplot(grades$Lab3~grades$T.A.)
median3 <- median(grades$Lab3,na.rm=TRUE)
k3_adj <- (grades$Lab3[grades$T.A. == "KIPP"]) + (median3 -  median(grades$Lab3[grades$T.A. == "KIPP"]) )
n3_adj <- (grades$Lab3[grades$T.A. == "NIKITHA"]) + (median3 -  median(grades$Lab3[grades$T.A. == "NIKITHA"]) )
r3_adj <- (grades$Lab3[grades$T.A. == "RAYMOND"]) + (median3 -  median(grades$Lab3[grades$T.A. == "RAYMOND"],na.rm=TRUE) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k3_adj,at=1,add=TRUE)
boxplot(n3_adj,add=TRUE,at=2)
boxplot(r3_adj,add=TRUE,at=3)
### Lab 4
## Very good after adjustment
par(mfrow=c(1,2))
boxplot(grades$Lab4~grades$T.A.)
median4 <- median(grades$Lab4,na.rm=TRUE)
k4_adj <- (grades$Lab4[grades$T.A. == "KIPP"]) + (median4 -  median(grades$Lab4[grades$T.A. == "KIPP"]) )
n4_adj <- (grades$Lab4[grades$T.A. == "NIKITHA"]) + (median4 -  median(grades$Lab4[grades$T.A. == "NIKITHA"]) )
r4_adj <- (grades$Lab4[grades$T.A. == "RAYMOND"]) + (median4 -  median(grades$Lab4[grades$T.A. == "RAYMOND"],na.rm=TRUE) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k4_adj,at=1,add=TRUE)
boxplot(n4_adj,add=TRUE,at=2)
boxplot(r4_adj,add=TRUE,at=3)
### Lab 5
par(mfrow=c(1,2))
boxplot(grades$Lab5~grades$T.A.)
median5 <- median(grades$Lab5,na.rm=TRUE)
k5_adj <- (grades$Lab5[grades$T.A. == "KIPP"]) + (median5 -  median(grades$Lab5[grades$T.A. == "KIPP"]) )
n5_adj <- (grades$Lab5[grades$T.A. == "NIKITHA"]) + (median5 -  median(grades$Lab5[grades$T.A. == "NIKITHA"]) )
r5_adj <- (grades$Lab5[grades$T.A. == "RAYMOND"]) + (median5 -  median(grades$Lab5[grades$T.A. == "RAYMOND"],na.rm=TRUE) )
plot(c(0,1,2,3,4),c(0.6,0.7,0.8,0.9,1.0),type="n")
boxplot(k5_adj,at=1,add=TRUE)
boxplot(n5_adj,add=TRUE,at=2)
boxplot(r5_adj,add=TRUE,at=3)
install.packages(c("akima", "aplpack", "bipartite", "boot", "car", "class", "cluster", "colorspace", "dichromat", "digest", "effects", "evaluate", "foreign", "FuncMap", "GEOmap", "ggplot2", "gpclib", "hexbin", "HiveR", "Hmisc", "igraph", "KernSmooth", "lattice", "mapproj", "maps", "maptools", "MASS", "Matrix", "mgcv", "multcomp", "munsell", "mvbutils", "mvtnorm", "nlme", "nnet", "plyr", "proto", "quantreg", "Rcmdr", "reshape2", "RFOC", "rgl", "rpart", "RPMG", "Rwave", "scales", "sem", "sna", "sp", "SparseM", "spatial", "splancs", "stringr", "survival", "tnet", "vegan", "xtable", "zoo"), lib="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
install.packages('shiny')
#kippjohnson@uchicago.edu
#vectors to store numbers later
lower_store = numeric()
upper_store = numeric()
range_store = numeric()
# set the population parameters & confidence
# interval statistics we desire
mu = 0
sigma = 1
sample_number = 100
sample_size = 50
confidence_level=.95
pop_size = 1e5
# draw the population
population <- rnorm(pop_size, mean = mu, sd = sigma)
for(i in 1:sample_number){
x <- sample(population, sample_size ,replace=TRUE) # get samples
xtest <- t.test(x, conf.level = confidence_level)  # t.test on samples
lower_store[i] <- xtest$conf.int[1]				   # assign upper and lower
upper_store[i] <- xtest$conf.int[2]				   # ends to approp. vector
}
# blank plot
par(mfrow = c(1,2))
plot(c(min(lower_store),max(upper_store)),c(0,sample_number),type="n",
xlab = "Interval",ylab="Interval Number",
main=paste(confidence_level, "% Confidence Intervals",sep=""))
abline(v=mu,lwd=2,lty=2,col="BLUE") # oadd line for true mean
for(i in 1:sample_number){
lines(c(lower_store[i],upper_store[i]),c(i,i)) #add lines containing interval to plot
if(mu <= upper_store[i] && mu >= lower_store[i]){ # number of intervals containing mu
range_store[i] = 1
} else{
range_store[i] = 0
}
}
mu_within = sum(range_store)
plot.new()
text(0.49,0.5,labels=paste("Percentage of intervals \n containing the true mean: ", sep="", mu_within/length(mu_within),"%"))
library (shiny)
library(shiny)
#kippjohnson@uchicago.edu
#vectors to store numbers later
lower_store = numeric()
upper_store = numeric()
range_store = numeric()
# set the population parameters & confidence
# interval statistics we desire
mu = 0
sigma = 1
sample_number = 100
sample_size = 50
confidence_level=.95
pop_size = 1e5
# draw the population
population <- rnorm(pop_size, mean = mu, sd = sigma)
for(i in 1:sample_number){
x <- sample(population, sample_size ,replace=TRUE) # get samples
xtest <- t.test(x, conf.level = confidence_level)  # t.test on samples
lower_store[i] <- xtest$conf.int[1]				   # assign upper and lower
upper_store[i] <- xtest$conf.int[2]				   # ends to approp. vector
}
# blank plot
par(mfrow = c(1,2))
plot(c(min(lower_store),max(upper_store)),c(0,sample_number),type="n",
xlab = "Interval",ylab="Interval Number",
main=paste(confidence_level, "% Confidence Intervals",sep=""))
abline(v=mu,lwd=2,lty=2,col="BLUE") # oadd line for true mean
for(i in 1:sample_number){
lines(c(lower_store[i],upper_store[i]),c(i,i)) #add lines containing interval to plot
if(mu <= upper_store[i] && mu >= lower_store[i]){ # number of intervals containing mu
range_store[i] = 1
} else{
range_store[i] = 0
}
}
mu_within = sum(range_store)
plot.new()
text(0.49,0.5,labels=paste("Percentage of intervals \n containing the true mean: ", sep="", mu_within/length(mu_within),"%"))
ls
cd
cd ~
ls
ls
pwd
cd()
lower_store = numeric()
upper_store = numeric()
range_store = numeric()
# set the population parameters & confidence
# interval statistics we desire
mu = 0
sigma = 1
sample_number = 100
sample_size = 50
confidence_level=.95
pop_size = 1e5
# draw the population
population <- rnorm(pop_size, mean = mu, sd = sigma)
for(i in 1:sample_number){
x <- sample(population, sample_size ,replace=TRUE) # get samples
xtest <- t.test(x, conf.level = confidence_level)  # t.test on samples
lower_store[i] <- xtest$conf.int[1]				   # assign upper and lower
upper_store[i] <- xtest$conf.int[2]				   # ends to approp. vector
}
# blank plot
#par(mfrow = c(1,2))
plot(c(min(lower_store),max(upper_store)),c(0,sample_number),type="n",
xlab = "Interval",ylab="Interval Number",
main=paste(confidence_level, "% Confidence Intervals",sep=""))
abline(v=mu,lwd=2,lty=2,col="BLUE") # oadd line for true mean
for(i in 1:sample_number){
lines(c(lower_store[i],upper_store[i]),c(i,i)) #add lines containing interval to plot
if(mu <= upper_store[i] && mu >= lower_store[i]){ # number of intervals containing mu
range_store[i] = 1
} else{
range_store[i] = 0
}
}
mu_within = sum(range_store)
#plot.new()
#text(0.49,0.5,labels=paste("Percentage of intervals \n containing the true mean: ", sep="", mu_within/length(mu_within),"%"))
#kippjohnson@uchicago.edu#vectors to store numbers laterlower_store = numeric()upper_store = numeric()range_store = numeric()# set the population parameters & confidence# interval statistics we desiremu = 0sigma = 1sample_number = 100sample_size = 50confidence_level=.5pop_size = 1e5# draw the populationpopulation <- rnorm(pop_size, mean = mu, sd = sigma)for(i in 1:sample_number){			x <- sample(population, sample_size ,replace=TRUE) # get samples 	xtest <- t.test(x, conf.level = confidence_level)  # t.test on samples	lower_store[i] <- xtest$conf.int[1]				   # assign upper and lower	upper_store[i] <- xtest$conf.int[2]				   # ends to approp. vector}# blank plot#par(mfrow = c(1,2))plot(c(min(lower_store),max(upper_store)),c(0,sample_number),type="n",	xlab = "Interval",ylab="Interval Number",	main=paste(confidence_level, "% Confidence Intervals",sep=""))abline(v=mu,lwd=2,lty=2,col="BLUE") # oadd line for true meanfor(i in 1:sample_number){	lines(c(lower_store[i],upper_store[i]),c(i,i)) #add lines containing interval to plot		if(mu <= upper_store[i] && mu >= lower_store[i]){ # number of intervals containing mu		range_store[i] = 1	} else{			range_store[i] = 0		}	}mu_within = sum(range_store)#plot.new()#text(0.49,0.5,labels=paste("Percentage of intervals \n containing the true mean: ", sep="", mu_within/length(mu_within),"%"))
#kippjohnson@uchicago.edu#vectors to store numbers laterlower_store = numeric()upper_store = numeric()range_store = numeric()# set the population parameters & confidence# interval statistics we desiremu = 0sigma = 1sample_number = 100sample_size = 50confidence_level=.05pop_size = 1e5# draw the populationpopulation <- rnorm(pop_size, mean = mu, sd = sigma)for(i in 1:sample_number){			x <- sample(population, sample_size ,replace=TRUE) # get samples 	xtest <- t.test(x, conf.level = confidence_level)  # t.test on samples	lower_store[i] <- xtest$conf.int[1]				   # assign upper and lower	upper_store[i] <- xtest$conf.int[2]				   # ends to approp. vector}# blank plot#par(mfrow = c(1,2))plot(c(min(lower_store),max(upper_store)),c(0,sample_number),type="n",	xlab = "Interval",ylab="Interval Number",	main=paste(confidence_level, "% Confidence Intervals",sep=""))abline(v=mu,lwd=2,lty=2,col="BLUE") # oadd line for true meanfor(i in 1:sample_number){	lines(c(lower_store[i],upper_store[i]),c(i,i)) #add lines containing interval to plot		if(mu <= upper_store[i] && mu >= lower_store[i]){ # number of intervals containing mu		range_store[i] = 1	} else{			range_store[i] = 0		}	}mu_within = sum(range_store)#plot.new()#text(0.49,0.5,labels=paste("Percentage of intervals \n containing the true mean: ", sep="", mu_within/length(mu_within),"%"))
#kippjohnson@uchicago.edu#vectors to store numbers laterlower_store = numeric()upper_store = numeric()range_store = numeric()# set the population parameters & confidence# interval statistics we desiremu = 0sigma = 1sample_number = 100sample_size = 50confidence_level=.05pop_size = 1e5# draw the populationpopulation <- rnorm(pop_size, mean = mu, sd = sigma)for(i in 1:sample_number){			x <- sample(population, sample_size ,replace=TRUE) # get samples 	xtest <- t.test(x, conf.level = confidence_level)  # t.test on samples	lower_store[i] <- xtest$conf.int[1]				   # assign upper and lower	upper_store[i] <- xtest$conf.int[2]				   # ends to approp. vector}# blank plot#par(mfrow = c(1,2))plot(c(min(lower_store),max(upper_store)),c(0,sample_number),type="n",	xlab = "Interval",ylab="Interval Number",	main=paste(confidence_level, "% Confidence Intervals",sep=""))abline(v=mu,lwd=2,lty=2,col="BLUE") # oadd line for true meanfor(i in 1:sample_number){	lines(c(lower_store[i],upper_store[i]),c(i,i)) #add lines containing interval to plot		if(mu <= upper_store[i] && mu >= lower_store[i]){ # number of intervals containing mu		range_store[i] = 1	} else{			range_store[i] = 0		}	}mu_within = sum(range_store)#plot.new()#text(0.49,0.5,labels=paste("Percentage of intervals \n containing the true mean: ", sep="", mu_within/length(mu_within),"%"))
ls()
multipleClasses()
?multipleClasses()
setwd("~/projects/PMQ/")
dir()
install.packages('knitr')
source('~/.active-rstudio-document', echo=TRUE)
install.packages(c('psych','dunn.test','plyr','ggplot2','gridExtra'))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages('reshape')
g2 <- ggplot(data=infile3, aes(factor(Q30.1.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
#stat_bin(geom='text', aes(label='99%'), hjust=2 ) +
ggtitle("Question 9 Reponse") + xlab("Response") + ylab('Frequency') +
scale_fill_discrete(name='Interest in career\nInvolving Research') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
kruskal.test(infile3$Q9 ~ as.factor(infile3$Q28.2c))
dunn.test(x=infile3$Q9, g=as.factor(infile3$Q28.2c), method="bh", alpha=0.05,wrap=FALSE)
ddply(infile3, ~Q28.2c, summarize, mean=mean(Q9, na.rm=TRUE), median=median(Q9), N=length(Q9))
infile3$Q9f <- factor(infile3$Q9)
levels(infile3$Q9f) <- c('Not at all','slight\nextent','moderate\nextent','great\nextent','very great\nextent')
### Condensed Figure
infile3$Q9cf <- factor(infile3$Q9c)
levels(infile3$Q9cf) <- c('Not at all/\nSlight Extent/\nModerate Extent','Great Extent/\nVery Great Extent')
g1 <- ggplot(data=infile3, aes(factor(Q9cf), fill=factor(Q28.2c)))
g1 <- g1 + geom_bar(position="fill" )
g1 <- g1 + ggtitle("Question 9 Reponse") + xlab("Question Response") + ylab('Percentage')
g1 <- g1 + scale_fill_discrete(name='Medical School\nYear Grouping', labels=c('Pre-Didactic','Pre-Clinical','Clinical')) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_flip()+  guides(fill=guide_legend(reverse=TRUE))
g1 + scale_y_continuous(labels=percent)
g1;
kruskal.test(infile3$Q9 ~ as.factor(infile3$Q30.1))
dunn.test(x=infile3$Q9, g=as.factor(infile3$Q30.1), method="bh", alpha=0.05,wrap=FALSE)
ddply(infile3, ~Q30.1, summarize, mean=mean(Q9, na.rm=TRUE), median=median(Q9), N=length(Q9))
### Figure
infile3$Q9cf <- factor(infile3$Q9c)
levels(infile3$Q9cf) <- c('Not at all/\nTo a slight extent/To a moderate \nextent','To a great extent/\nTo a very great extent')
infile3$Q30.1.fNA <- (as.factor(infile3$Q30.1))
levels(infile3$Q30.1.fNA) <- c('No','Yes',"Unsure")
new.levels<-c("No or Unsure","Yes","No or Unsure")
infile3$Q30.1.fNA <- new.levels[infile3$Q30.1.fNA]
# g1 <- ggplot(data=infile3, aes(factor(Q9cf), fill=Q30.1.fNA), aes(y=..count../sum(..count..))) +
#       geom_bar(position="fill", binwidth=0.25 )+
#       #stat_bin(geom='text', aes(label='99%'), hjust=2 ) +
#       ggtitle("Question 9 Reponse") + xlab("Response") + ylab('Frequency') +
#       scale_fill_discrete(name='Interest in career\nInvolving Research') + coord_flip() +
#       guides(fill=guide_legend(reverse=TRUE))
#
# g1;
g2 <- ggplot(data=infile3, aes(factor(Q30.1.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
#stat_bin(geom='text', aes(label='99%'), hjust=2 ) +
ggtitle("Question 9 Reponse") + xlab("Response") + ylab('Frequency') +
scale_fill_discrete(name='Interest in career\nInvolving Research') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
infile3$Q30.1.fNA <- (as.factor(infile3$Q30.1))
levels(infile3$Q30.1.fNA) <- c('No','Yes',"Unsure")
infile3$Q28.2.fNA <- (as.factor(infile3$Q28.2c))
infile3$Q28.2.fNA
levels(infile3$Q30.1.fNA) <- c('Pre-Didactic','Pre-clinical',"Clinical")
g2 <- ggplot(data=infile3, aes(factor(Q28.2.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
ggtitle("Question 9 Reponse") + xlab("Response") + ylab('Frequency') +
scale_fill_discrete(name='') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
infile3$Q28.2.fNA <- (as.factor(infile3$Q28.2c))
levels(infile3$Q30.1.fNA) <- c('Pre-Didactic','Pre-clinical',"Clinical")
g2 <- ggplot(data=infile3, aes(factor(Q28.2.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
ggtitle("Question 9 Reponse") + xlab("Training Year") + ylab('Percent') +
scale_fill_discrete(name='Question Response') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
g2 <- ggplot(data=infile3, aes(factor(Q30.1.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
#stat_bin(geom='text', aes(label='99%'), hjust=2 ) +
ggtitle("Question 9 Reponse") + xlab("Response") + ylab('Frequency') +
scale_fill_discrete(name='Interest in career\nInvolving Research') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
g2 <- ggplot(data=infile3, aes(factor(Q30.1.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
#stat_bin(geom='text', aes(label='99%'), hjust=2 ) +
ggtitle("Question 9 Reponse") + xlab("Training Year") + ylab('Frequency') +
scale_fill_discrete(name='Interest in career\nInvolving Research') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
infile3$Q28.2.fNA <- (as.factor(infile3$Q28.2c))
levels(infile3$Q30.1.fNA) <- c('Pre-Didactic','Pre-clinical',"Clinical")
g2 <- ggplot(data=infile3, aes(factor(Q28.2.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
ggtitle("Question 9 Reponse") + xlab("Training Year") + ylab('Percent') +
scale_fill_discrete(name='Question Response') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
infile3$Q9cf
infile3$Q28.2.fNA <- (as.factor(infile3$Q28.2c))
levels(infile3$Q28.2.fNA) <- c('Pre-Didactic','Pre-clinical',"Clinical")
g2 <- ggplot(data=infile3, aes(factor(Q28.2.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
ggtitle("Question 9 Reponse") + xlab("Training Year") + ylab('Percent') +
scale_fill_discrete(name='Question Response') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
```{r Test for association between question 9 and question 30.1, echo=FALSE, fig.width=10}
kruskal.test(infile3$Q9 ~ as.factor(infile3$Q30.1))
dunn.test(x=infile3$Q9, g=as.factor(infile3$Q30.1), method="bh", alpha=0.05,wrap=FALSE)
ddply(infile3, ~Q30.1, summarize, mean=mean(Q9, na.rm=TRUE), median=median(Q9), N=length(Q9))
### Figure
infile3$Q9cf <- factor(infile3$Q9c)
levels(infile3$Q9cf) <- c('Not at all/\nTo a slight extent/To a moderate \nextent','To a great extent/\nTo a very great extent')
infile3$Q30.1.fNA <- (as.factor(infile3$Q30.1))
levels(infile3$Q30.1.fNA) <- c('No','Yes',"Unsure")
new.levels<-c("No or Unsure","Yes","No or Unsure")
infile3$Q30.1.fNA <- new.levels[infile3$Q30.1.fNA]
# g1 <- ggplot(data=infile3, aes(factor(Q9cf), fill=Q30.1.fNA), aes(y=..count../sum(..count..))) +
#       geom_bar(position="fill", binwidth=0.25 )+
#       #stat_bin(geom='text', aes(label='99%'), hjust=2 ) +
#       ggtitle("Question 9 Reponse") + xlab("Response") + ylab('Frequency') +
#       scale_fill_discrete(name='Interest in career\nInvolving Research') + coord_flip() +
#       guides(fill=guide_legend(reverse=TRUE))
#
# g1;
g2 <- ggplot(data=infile3, aes(factor(Q30.1.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
#stat_bin(geom='text', aes(label='99%'), hjust=2 ) +
ggtitle("Question 9 Reponse") + xlab("Training Year") + ylab('Frequency') +
scale_fill_discrete(name='Interest in career\nInvolving Research') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
g2 <- ggplot(data=infile3, aes(factor(Q30.1.fNA), fill=Q9cf), aes(y=..count../sum(..count..))) +
geom_bar(position="fill", binwidth=0.25 )+
#stat_bin(geom='text', aes(label='99%'), hjust=2 ) +
ggtitle("Question 9 Reponse") + xlab("Response") + ylab('Frequency') +
scale_fill_discrete(name='Interest in career\nInvolving Research') + coord_flip() +
guides(fill=guide_legend(reverse=TRUE)) + scale_y_continuous(labels=percent)
g2;
